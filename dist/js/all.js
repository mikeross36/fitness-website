"use strict";class Navbar{async getNavLinks(){try{const e=await fetch("/data/nav-data/navlinks.json");return await e.json()}catch(e){console.log(e)}}displayNavLinks(e){const t=document.querySelector(".navbar");e.forEach((e=>{t&&t.insertAdjacentHTML("beforeend",`<a href="${e.url}" class="navbar__link">${e.title}</a>`)}))}}!async function(){const e=new Navbar,t=await e.getNavLinks();e.displayNavLinks(t)}();class Offers{async getOffers(){try{const e=await fetch("/data/offers-data/offers-data.json");return await e.json()}catch(e){console.error(e)}}displayOffers=e=>{const t=document.querySelector(".offers__container");e.forEach((e=>{t&&t.insertAdjacentHTML("beforeend",`\n                <article class="offers__box">\n                    <div class="offers__box-image">\n                        <img src="${e.image}" class="offers__box-img" alt="offer pic">\n                    </div>\n                    <div class="offers__box-content">\n                        <img src="${e.icon}" class="box__icon" alt="">\n                        <h3 class="box__title">${e.title}</h3>\n                        <p class="box__description">${e.description}</p>\n                        <a href="#home" class="btn">read more</a>\n                    </div>\n                </article>\n            `)}))}}(async()=>{const e=new Offers,t=await e.getOffers();e.displayOffers(t)})();class Plans{async getPlans(){try{const e=await fetch("/data/pricing-data/pricing-data.json");return await e.json()}catch(e){console.error(e)}}displayPlans=e=>{const t=document.querySelectorAll(".plan__includes");let n="";e.forEach((e=>{n+=`\n            <p class="pricing__info-plan">\n                <img src="${e.icon}" alt="check-icon" class="pricing__info-icon" width="20px" height="20px">\n                ${e.title}\n            </p>`})),t.forEach((e=>{e.insertAdjacentHTML("beforeend",n)}))}}function navbarCtrl(){const e=document.getElementById("menu-btn"),t=document.querySelector(".navbar"),n=document.querySelector(".burger__btn");e.onclick=()=>{n.classList.toggle("active"),t.classList.toggle("active")},window.onscroll=()=>{t.classList.remove("active")}}function homeSlider(){const e=[...document.querySelectorAll(".home__slide")],t=[...document.querySelectorAll(".slider__nav-link")];let n=0;t.forEach(((s,a)=>{s.addEventListener("click",(()=>{var s;n!==a&&((s=a)>=e.length?s=0:s<0&&(s=e.length-1),e[n].classList.toggle("active-slide"),t[n].classList.toggle("active-link"),e[s].classList.toggle("active-slide"),t[s].classList.toggle("active-link"),n=s)}))}))}function testimonialSlider(){const e=[...document.querySelectorAll(".slide")],t=document.querySelector(".prev__btn"),n=document.querySelector(".next__btn");let s=0;t.addEventListener("click",(()=>{e[s].classList.remove("active-slide"),s=(s-1+e.length)%e.length,e[s].classList.add("active-slide")})),n.addEventListener("click",(()=>{e[s].classList.remove("active-slide"),s=(s+1)%e.length,e[s].classList.add("active-slide")}))}(async()=>{const e=new Plans,t=await e.getPlans();e.displayPlans(t)})(),testimonialSlider(),homeSlider(),navbarCtrl();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRpc3BsYXlOYXZiYXIuanMiLCJkaXNwbGF5T2ZmZXJzLmpzIiwiZGlzcGxheVBsYW5zLmpzIiwic2NyaXB0LmpzIl0sIm5hbWVzIjpbIk5hdmJhciIsImFzeW5jIiwicmVzcG9uc2UiLCJmZXRjaCIsImpzb24iLCJlcnJvciIsImNvbnNvbGUiLCJsb2ciLCJkaXNwbGF5TmF2TGlua3MiLCJsaW5rcyIsIm5hdiIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImZvckVhY2giLCJsaW5rIiwiaW5zZXJ0QWRqYWNlbnRIVE1MIiwidXJsIiwidGl0bGUiLCJuYXZiYXIiLCJnZXROYXZMaW5rcyIsIk9mZmVycyIsImRpc3BsYXlPZmZlcnMiLCJvZmZlcnMiLCJjb250YWluZXIiLCJvZmZlciIsImltYWdlIiwiaWNvbiIsImRlc2NyaXB0aW9uIiwiYXBpT2ZmZXJzIiwiZ2V0T2ZmZXJzIiwiUGxhbnMiLCJkaXNwbGF5UGxhbnMiLCJwbGFucyIsImluY2x1ZGVzIiwicXVlcnlTZWxlY3RvckFsbCIsImVsZW1lbnQiLCJwbGFuIiwiZGl2IiwibmF2YmFyQ3RybCIsIm1lbnVCdG4iLCJnZXRFbGVtZW50QnlJZCIsImJ1cmdlciIsIm9uY2xpY2siLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJ3aW5kb3ciLCJvbnNjcm9sbCIsInJlbW92ZSIsImhvbWVTbGlkZXIiLCJzbGlkZXMiLCJzbGlkZUxpbmtzIiwiY3VycmVudFNsaWRlIiwibGlua0lkeCIsImFkZEV2ZW50TGlzdGVuZXIiLCJuZXdTbGlkZSIsImxlbmd0aCIsInRlc3RpbW9uaWFsU2xpZGVyIiwicmV2U2xpZGVzIiwicHJldkJ0biIsIm5leHRCdG4iLCJpbmRleCIsImFkZCIsImFwaVBsYW5zIiwiZ2V0UGxhbnMiXSwibWFwcGluZ3MiOiJBQUFBLGFBRUEsTUFBQUEsT0FDQUMsb0JBQ0EsSUFDQSxNQUFBQyxRQUFBQyxNQUFBLGdDQUVBLGFBREFELEVBQUFFLE1BS0EsQ0FGQSxNQUFBQyxHQUNBQyxRQUFBQyxJ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QUFBa0IsSUFBQSxlQUFBLEdBS0EsQ0RyQ0EsV0FDQSxNQUFBN0IsRUFBQSxJQUFBRixNQUNBZ0MsUUFBQTlCLEVBQUErQixXQUNBL0IsRUFBQUQsYUFBQStCLEVBQ0EsRUFKQSxHQ3dDQU4sb0JBQ0FSLGFBQ0FWIiwiZmlsZSI6ImFsbC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiXHJcblxyXG5jbGFzcyBOYXZiYXIge1xyXG4gICAgYXN5bmMgZ2V0TmF2TGlua3MoKSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChcIi9kYXRhL25hdi1kYXRhL25hdmxpbmtzLmpzb25cIilcclxuICAgICAgICAgICAgY29uc3QgbGlua3MgPSBhd2FpdCByZXNwb25zZS5qc29uKClcclxuICAgICAgICAgICAgcmV0dXJuIGxpbmtzO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGRpc3BsYXlOYXZMaW5rcyhsaW5rcykge1xyXG4gICAgICAgIGNvbnN0IG5hdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubmF2YmFyXCIpXHJcbiAgICAgICAgbGlua3MuZm9yRWFjaChsaW5rID0+IHtcclxuICAgICAgICAgICAgaWYgKG5hdikgbmF2Lmluc2VydEFkamFjZW50SFRNTChcImJlZm9yZWVuZFwiLCBgPGEgaHJlZj1cIiR7bGluay51cmx9XCIgY2xhc3M9XCJuYXZiYXJfX2xpbmtcIj4ke2xpbmsudGl0bGV9PC9hPmApXHJcbiAgICAgICAgfSlcclxuICAgIH1cclxufTtcclxuXHJcbihhc3luYyBmdW5jdGlvbiAoKSB7XHJcbiAgICBjb25zdCBuYXZiYXIgPSBuZXcgTmF2YmFyKClcclxuICAgIGNvbnN0IGxpbmtzID0gYXdhaXQgbmF2YmFyLmdldE5hdkxpbmtzKClcclxuICAgIG5hdmJhci5kaXNwbGF5TmF2TGlua3MobGlua3MpXHJcbn0pKCk7IiwiXCJ1c2Ugc3RyaWN0XCJcclxuXHJcbmNsYXNzIE9mZmVycyB7XHJcbiAgYXN5bmMgZ2V0T2ZmZXJzKCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChcIi9kYXRhL29mZmVycy1kYXRhL29mZmVycy1kYXRhLmpzb25cIik7XHJcbiAgICAgIGNvbnN0IG9mZmVycyA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuICAgICAgcmV0dXJuIG9mZmVycztcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZGlzcGxheU9mZmVycyA9IChvZmZlcnMpID0+IHtcclxuICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIub2ZmZXJzX19jb250YWluZXJcIik7XHJcbiAgICBvZmZlcnMuZm9yRWFjaCgob2ZmZXIpID0+IHtcclxuICAgICAgaWYgKGNvbnRhaW5lcikge1xyXG4gICAgICAgIGNvbnRhaW5lci5pbnNlcnRBZGphY2VudEhUTUwoXHJcbiAgICAgICAgICBcImJlZm9yZWVuZFwiLFxyXG4gICAgICAgICAgYFxyXG4gICAgICAgICAgICAgICAgPGFydGljbGUgY2xhc3M9XCJvZmZlcnNfX2JveFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJvZmZlcnNfX2JveC1pbWFnZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz1cIiR7b2ZmZXIuaW1hZ2V9XCIgY2xhc3M9XCJvZmZlcnNfX2JveC1pbWdcIiBhbHQ9XCJvZmZlciBwaWNcIj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwib2ZmZXJzX19ib3gtY29udGVudFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz1cIiR7b2ZmZXIuaWNvbn1cIiBjbGFzcz1cImJveF9faWNvblwiIGFsdD1cIlwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8aDMgY2xhc3M9XCJib3hfX3RpdGxlXCI+JHtvZmZlci50aXRsZX08L2gzPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz1cImJveF9fZGVzY3JpcHRpb25cIj4ke29mZmVyLmRlc2NyaXB0aW9ufTwvcD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cIiNob21lXCIgY2xhc3M9XCJidG5cIj5yZWFkIG1vcmU8L2E+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2FydGljbGU+XHJcbiAgICAgICAgICAgIGBcclxuICAgICAgICApO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9O1xyXG59O1xyXG5cclxuKGFzeW5jICgpID0+IHtcclxuICAgIGNvbnN0IG9mZmVycyA9IG5ldyBPZmZlcnMoKVxyXG4gICAgY29uc3QgYXBpT2ZmZXJzID0gYXdhaXQgb2ZmZXJzLmdldE9mZmVycygpXHJcbiAgICBvZmZlcnMuZGlzcGxheU9mZmVycyhhcGlPZmZlcnMpXHJcbn0pKCk7IiwiXCJ1c2Ugc3RyaWN0XCJcclxuXHJcbmNsYXNzIFBsYW5zIHtcclxuICAgIGFzeW5jIGdldFBsYW5zKCkge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goXCIvZGF0YS9wcmljaW5nLWRhdGEvcHJpY2luZy1kYXRhLmpzb25cIilcclxuICAgICAgICAgICAgY29uc3QgcGxhbnMgPSBhd2FpdCByZXNwb25zZS5qc29uKClcclxuICAgICAgICAgICAgcmV0dXJuIHBsYW5zO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcilcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZGlzcGxheVBsYW5zID0gcGxhbnMgPT4ge1xyXG4gICAgICAgIGNvbnN0IGluY2x1ZGVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5wbGFuX19pbmNsdWRlc1wiKVxyXG4gICAgICAgIGxldCBlbGVtZW50ID0gXCJcIlxyXG4gICAgICAgIHBsYW5zLmZvckVhY2gocGxhbiA9PiB7XHJcbiAgICAgICAgICAgIGVsZW1lbnQgKz0gYFxyXG4gICAgICAgICAgICA8cCBjbGFzcz1cInByaWNpbmdfX2luZm8tcGxhblwiPlxyXG4gICAgICAgICAgICAgICAgPGltZyBzcmM9XCIke3BsYW4uaWNvbn1cIiBhbHQ9XCJjaGVjay1pY29uXCIgY2xhc3M9XCJwcmljaW5nX19pbmZvLWljb25cIiB3aWR0aD1cIjIwcHhcIiBoZWlnaHQ9XCIyMHB4XCI+XHJcbiAgICAgICAgICAgICAgICAke3BsYW4udGl0bGV9XHJcbiAgICAgICAgICAgIDwvcD5gXHJcbiAgICAgICAgfSlcclxuICAgICAgICBpbmNsdWRlcy5mb3JFYWNoKGRpdiA9PiB7XHJcbiAgICAgICAgICAgIGRpdi5pbnNlcnRBZGphY2VudEhUTUwoXCJiZWZvcmVlbmRcIiwgZWxlbWVudClcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG59O1xyXG5cclxuKGFzeW5jICgpID0+IHtcclxuICAgIGNvbnN0IHBsYW5zID0gbmV3IFBsYW5zKClcclxuICAgIGNvbnN0IGFwaVBsYW5zID0gYXdhaXQgcGxhbnMuZ2V0UGxhbnMoKVxyXG4gICAgcGxhbnMuZGlzcGxheVBsYW5zKGFwaVBsYW5zKVxyXG59KSgpIiwiXCJ1c2Ugc3RyaWN0XCJcclxuXHJcbmZ1bmN0aW9uIG5hdmJhckN0cmwoKSB7XHJcbiAgICBjb25zdCBtZW51QnRuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtZW51LWJ0blwiKVxyXG4gICAgY29uc3QgbmF2YmFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5uYXZiYXJcIilcclxuICAgIGNvbnN0IGJ1cmdlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYnVyZ2VyX19idG5cIilcclxuXHJcbiAgICBtZW51QnRuLm9uY2xpY2sgPSAoKSA9PiB7XHJcbiAgICAgICAgYnVyZ2VyLmNsYXNzTGlzdC50b2dnbGUoXCJhY3RpdmVcIilcclxuICAgICAgICBuYXZiYXIuY2xhc3NMaXN0LnRvZ2dsZShcImFjdGl2ZVwiKVxyXG4gICAgfVxyXG5cclxuICAgIHdpbmRvdy5vbnNjcm9sbCA9ICgpID0+IHtcclxuICAgICAgICBuYXZiYXIuY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKVxyXG4gICAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBob21lU2xpZGVyKCkge1xyXG4gICAgY29uc3Qgc2xpZGVzID0gWy4uLmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuaG9tZV9fc2xpZGVcIildXHJcbiAgICBjb25zdCBzbGlkZUxpbmtzID0gWy4uLmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuc2xpZGVyX19uYXYtbGlua1wiKV1cclxuICAgIGxldCBjdXJyZW50U2xpZGUgPSAwXHJcblxyXG4gICAgY29uc3QgY2hhbmdlU2xpZGUgPSAobmV3U2xpZGUpID0+IHtcclxuICAgICAgICBpZiAobmV3U2xpZGUgPj0gc2xpZGVzLmxlbmd0aCkge1xyXG4gICAgICAgICAgICBuZXdTbGlkZSA9IDBcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAobmV3U2xpZGUgPCAwKSB7XHJcbiAgICAgICAgICAgIG5ld1NsaWRlID0gc2xpZGVzLmxlbmd0aCAtIDFcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHNsaWRlc1tjdXJyZW50U2xpZGVdLmNsYXNzTGlzdC50b2dnbGUoXCJhY3RpdmUtc2xpZGVcIilcclxuICAgICAgICBzbGlkZUxpbmtzW2N1cnJlbnRTbGlkZV0uY2xhc3NMaXN0LnRvZ2dsZShcImFjdGl2ZS1saW5rXCIpXHJcbiAgICAgICAgc2xpZGVzW25ld1NsaWRlXS5jbGFzc0xpc3QudG9nZ2xlKFwiYWN0aXZlLXNsaWRlXCIpXHJcbiAgICAgICAgc2xpZGVMaW5rc1tuZXdTbGlkZV0uY2xhc3NMaXN0LnRvZ2dsZShcImFjdGl2ZS1saW5rXCIpXHJcblxyXG4gICAgICAgIGN1cnJlbnRTbGlkZSA9IG5ld1NsaWRlXHJcbiAgICB9XHJcblxyXG4gICAgc2xpZGVMaW5rcy5mb3JFYWNoKChsaW5rLCBsaW5rSWR4KSA9PiB7XHJcbiAgICAgICAgbGluay5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoY3VycmVudFNsaWRlICE9PSBsaW5rSWR4KSB7XHJcbiAgICAgICAgICAgICAgICBjaGFuZ2VTbGlkZShsaW5rSWR4KVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgIH0pXHJcbn07XHJcblxyXG5mdW5jdGlvbiB0ZXN0aW1vbmlhbFNsaWRlcigpIHtcclxuICAgIGNvbnN0IHJldlNsaWRlcyA9IFsuLi5kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLnNsaWRlXCIpXVxyXG4gICAgY29uc3QgcHJldkJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJldl9fYnRuXCIpXHJcbiAgICBjb25zdCBuZXh0QnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5uZXh0X19idG5cIilcclxuICAgIGxldCBpbmRleCA9IDBcclxuXHJcbiAgICBjb25zdCBwcmV2U2xpZGUgPSAoKSA9PiB7XHJcbiAgICAgICAgcmV2U2xpZGVzW2luZGV4XS5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlLXNsaWRlXCIpXHJcbiAgICAgICAgaW5kZXggPSAoaW5kZXggLSAxICsgcmV2U2xpZGVzLmxlbmd0aCkgJSByZXZTbGlkZXMubGVuZ3RoXHJcbiAgICAgICAgcmV2U2xpZGVzW2luZGV4XS5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlLXNsaWRlXCIpXHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgbmV4dFNsaWRlID0gKCkgPT4ge1xyXG4gICAgICAgIHJldlNsaWRlc1tpbmRleF0uY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZS1zbGlkZVwiKVxyXG4gICAgICAgIGluZGV4ID0gKGluZGV4ICsgMSkgJSByZXZTbGlkZXMubGVuZ3RoXHJcbiAgICAgICAgcmV2U2xpZGVzW2luZGV4XS5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlLXNsaWRlXCIpXHJcbiAgICB9XHJcblxyXG4gICAgcHJldkJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgcHJldlNsaWRlKVxyXG4gICAgbmV4dEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgbmV4dFNsaWRlKVxyXG59O1xyXG5cclxuKGZ1bmN0aW9uICgpIHtcclxuICAgIHRlc3RpbW9uaWFsU2xpZGVyKClcclxuICAgIGhvbWVTbGlkZXIoKVxyXG4gICAgbmF2YmFyQ3RybCgpXHJcbn0pKCk7XHJcbiJdfQ==
